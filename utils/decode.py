_dec1_str = \
"0D A4 0B 40 93 38 1B E9 4C 2D 1F 77 15 BA FE 85 \
 2B F8 01 87 41 A1 88 B0 D0 17 FC 13 AF A8 04 08 \
 E3 10 D1 B8 3F A3 7D 11 5D 0C F7 D6 89 ED 26 DD \
 65 78 2A 82 83 0F D7 02 68 B3 CF 32 D4 55 D9 C3 \
 03 3B 94 35 39 28 57 C9 C7 E4 1E A9 59 FD 24 EA \
 97 0E 9B 4D C4 A0 54 7B 62 DB 56 4F 14 E8 B6 5C \
 6B A5 72 8F DF 12 37 9E DC D2 50 5F CD D8 8E 23 \
 8A 44 31 3C D3 E6 8B 51 2F 7E 46 7F F2 6E 5B 99 \
 79 09 FF AE EE 3E 49 9D C6 0A 6C DA BB 74 E7 86 \
 16 90 F4 F0 F5 A6 C8 8C B4 3A BC 1D 52 27 B7 CA \
 E1 F9 96 43 60 A2 05 2E B1 6A C1 73 7A 92 D5 5A \
 81 F6 18 FB 95 6F 5E 64 CB 7C 36 E5 66 9A FA 4B \
 1A CE 3D 42 07 AB 45 33 A7 84 EF 67 E0 F1 91 75 \
 98 20 34 22 00 63 BF 53 71 8D E2 6D 9F 4A 29 47 \
 EB 19 AC 21 25 70 EC 80 9C 30 61 CC B2 C5 06 4E \
 B5 BD F3 69 48 C0 AA 58 B9 C2 1C 2C 76 BE DE AD"

_dec2_str = \
"95 62 01 3B B9 6D B2 F4 F2 87 8D 9D B7 7B 24 FA \
 27 02 BB E4 2B 66 36 30 32 CB CD 53 52 12 46 42 \
 77 79 C3 2A 93 2C D2 BC DD 8B 43 04 70 AA 5B 0F \
 4D 78 82 40 92 AD 17 DE 6C F8 E2 D8 8F 26 11 ED \
 D5 C6 BF 21 07 64 E3 47 51 00 3F 89 2D C9 E1 3E \
 EE F6 03 1F EA 41 4A 34 D4 90 94 2F 4F C4 0D 9B \
 DF BD 61 6F A2 A6 B0 A5 22 EB E0 8A 08 CC 9A 91 \
 72 23 B4 BA 49 B6 FB 16 A4 83 E6 C5 DA 81 48 1D \
 E9 10 BE B8 50 F7 18 3A 19 80 85 FD 1B A0 CA A8 \
 33 15 7C 54 C1 7A AE D9 39 75 C7 E5 D0 9F AF 44 \
 A7 7F 09 59 5C CE 96 0C AB B1 6B F0 97 65 86 FF \
 F3 20 C2 E8 CF 25 5A 55 37 76 69 63 C0 99 31 45 \
 1C 13 38 29 E7 7D 84 56 28 D1 1E 4C 88 8E B5 FC \
 D7 5E D3 3D 35 F5 A1 06 58 D6 AC A3 0E 71 98 DC \
 EF 05 2E DB 14 5F F9 6A 8C B3 0A 4E 9E 4B 67 7E \
 6E 3C 68 1A 57 C8 0B 9C 73 60 A9 FE 74 EC 5D F1"

_dec3_str = \
"41 5C 19 E3 F0 3C EE 43 76 FE F1 A7 45 D9 C8 2A \
 CB C9 DC 8E 1B 59 5D 18 A1 08 82 F6 23 6B DB A6 \
 FD 1E 51 12 F3 4F EF E7 A5 E8 4B D6 7C 68 FF 56 \
 6C 86 17 F5 A3 95 AD 8F 83 0E EB 07 36 A0 39 AC \
 4C 74 49 11 8C D5 3F E2 42 5A EA 67 96 85 91 26 \
 9A C2 2F EC 97 24 46 32 64 20 65 B7 53 7F 40 E5 \
 2E DA CF 2D 4E ED FB 90 81 E9 B1 9D 80 77 F7 7E \
 A4 6A 57 09 62 35 55 BD 5F 9B 6D A8 16 C3 4D 75 \
 22 1C 03 0B 54 48 1D 3A 78 93 30 BA 92 9F 0A 02 \
 2C AF 50 6E 44 B3 FC 4A C5 79 31 FA 69 9C C0 CC \
 13 F8 1A 34 D8 B0 B4 14 72 84 BB E4 8A C4 AB E1 \
 B5 8D D0 0C 37 CA D1 47 CE 15 0D 0F 27 99 01 89 \
 58 61 A9 D3 C1 28 AE 00 70 21 5B 05 04 F2 B9 3B \
 5E 98 BC 06 AA 94 A2 F9 3E B8 29 7D F4 E0 B6 66 \
 63 73 C7 D2 38 8B 6F 52 33 88 3D 1F C6 10 7A 2B \
 D4 87 25 E6 9E DF B2 D7 DE 71 BF 7B 60 DD BE CD"

_dec4_str = \
"A7 43 24 53 7E 4B AB 1A 8B EE 91 6C 02 82 30 C9 \
 81 7F 00 3D B3 7C 95 23 5C BA 75 F2 DE 9F C1 5A \
 01 66 18 90 F3 16 B8 E6 8E B0 9E DA AD D3 32 AA \
 57 F6 28 BF 1F C4 F7 A8 48 4F 27 BD F8 1C 13 98 \
 FA 76 CE 5E F0 12 4A CA 7D 99 0A 14 D7 9C 10 47 \
 7A B1 2C 5B BC 6E DD 62 F1 69 C6 D5 E5 36 31 FE \
 89 87 61 42 B6 A3 D6 54 17 93 05 E3 C5 68 C3 CB \
 0E E1 86 6F 9D 04 E7 34 8F 96 2D 07 8D 63 E8 9B \
 F4 11 38 20 83 74 55 9A 8C 26 92 67 06 EF 56 29 \
 19 60 59 C2 AE 08 22 1B 94 D8 2B EC A1 A6 FF CC \
 39 41 51 88 37 79 25 78 4C 6A FD 33 44 AC BE 64 \
 AF 3A B4 45 B9 D9 70 0F 2E EA 3F E2 8A 77 B7 A4 \
 40 DC D4 A5 C8 4D 50 FB EB 58 C0 3E 97 49 CD 71 \
 7B 46 3C 72 CF F5 73 ED 1E E0 09 03 C7 84 0C 35 \
 B5 6B 85 DF 0D 65 D1 5D 1D A9 B2 F9 E4 D2 DB 4E \
 2A FC 0B BB D0 E9 A2 A0 2F 15 6D 21 80 3B 52 5F"

_dec1_code = _dec1_str.split()
_dec2_code = _dec2_str.split()
_dec3_code = _dec3_str.split()
_dec4_code = _dec4_str.split()

_decode1 = bytes(int(h, 16) for h in _dec1_code)
_decode2 = bytes(int(h, 16) for h in _dec2_code)
_decode3 = bytes(int(h, 16) for h in _dec3_code)
_decode4 = bytes(int(h, 16) for h in _dec4_code)
_decodes = [_decode1, _decode2, _decode3, _decode4]

def _decrypt_data( s4, data: bytes ) -> bytes:
    return bytes( _decodes[s4][b] for b in data)